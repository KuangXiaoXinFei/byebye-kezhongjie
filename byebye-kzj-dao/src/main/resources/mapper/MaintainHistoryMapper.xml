<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byebye.kzj.dao.MaintainHistoryMapper">
  <resultMap id="BaseResultMap" type="com.byebye.kzj.model.MaintainHistory">
    <id column="maintain_id" jdbcType="INTEGER" property="maintainId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="mileage" jdbcType="VARCHAR" property="mileage" />
    <result column="maintain_time" jdbcType="TIMESTAMP" property="maintainTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="shop_code" jdbcType="VARCHAR" property="shopCode" />
    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="is_active" jdbcType="TINYINT" property="isActive" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    maintain_id, user_id, mileage, maintain_time, content, shop_code, shop_name, record_id, 
    source, is_active, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.byebye.kzj.model.MaintainHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from maintain_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from maintain_history
    where maintain_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from maintain_history
    where maintain_id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.byebye.kzj.model.MaintainHistoryExample">
    delete from maintain_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.byebye.kzj.model.MaintainHistory">
    insert into maintain_history (maintain_id, user_id, mileage, 
      maintain_time, content, shop_code, 
      shop_name, record_id, source, 
      is_active, create_time, update_time
      )
    values (#{maintainId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{mileage,jdbcType=VARCHAR}, 
      #{maintainTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{shopCode,jdbcType=VARCHAR}, 
      #{shopName,jdbcType=VARCHAR}, #{recordId,jdbcType=INTEGER}, #{source,jdbcType=TINYINT}, 
      #{isActive,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.byebye.kzj.model.MaintainHistory">
    insert into maintain_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="maintainId != null">
        maintain_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="maintainTime != null">
        maintain_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="shopCode != null">
        shop_code,
      </if>
      <if test="shopName != null">
        shop_name,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="isActive != null">
        is_active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="maintainId != null">
        #{maintainId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=VARCHAR},
      </if>
      <if test="maintainTime != null">
        #{maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="isActive != null">
        #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.byebye.kzj.model.MaintainHistoryExample" resultType="java.lang.Long">
    select count(*) from maintain_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update maintain_history
    <set>
      <if test="record.maintainId != null">
        maintain_id = #{record.maintainId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=VARCHAR},
      </if>
      <if test="record.maintainTime != null">
        maintain_time = #{record.maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.shopCode != null">
        shop_code = #{record.shopCode,jdbcType=VARCHAR},
      </if>
      <if test="record.shopName != null">
        shop_name = #{record.shopName,jdbcType=VARCHAR},
      </if>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.isActive != null">
        is_active = #{record.isActive,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update maintain_history
    set maintain_id = #{record.maintainId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      mileage = #{record.mileage,jdbcType=VARCHAR},
      maintain_time = #{record.maintainTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=VARCHAR},
      shop_code = #{record.shopCode,jdbcType=VARCHAR},
      shop_name = #{record.shopName,jdbcType=VARCHAR},
      record_id = #{record.recordId,jdbcType=INTEGER},
      source = #{record.source,jdbcType=TINYINT},
      is_active = #{record.isActive,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.byebye.kzj.model.MaintainHistory">
    update maintain_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=VARCHAR},
      </if>
      <if test="maintainTime != null">
        maintain_time = #{maintainTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="shopCode != null">
        shop_code = #{shopCode,jdbcType=VARCHAR},
      </if>
      <if test="shopName != null">
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="isActive != null">
        is_active = #{isActive,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where maintain_id = #{maintainId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.byebye.kzj.model.MaintainHistory">
    update maintain_history
    set user_id = #{userId,jdbcType=INTEGER},
      mileage = #{mileage,jdbcType=VARCHAR},
      maintain_time = #{maintainTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      shop_code = #{shopCode,jdbcType=VARCHAR},
      shop_name = #{shopName,jdbcType=VARCHAR},
      record_id = #{recordId,jdbcType=INTEGER},
      source = #{source,jdbcType=TINYINT},
      is_active = #{isActive,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where maintain_id = #{maintainId,jdbcType=INTEGER}
  </update>
</mapper>